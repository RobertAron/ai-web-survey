// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL_NON_POOLING")
}

enum AiModelType {
  Republican
  Democrat
  Control
}

enum ExtraInfoType {
  // no changes
  Control
  // Chat warning "AI Language Models can make mistakes or be inappropriate."
  Basic
  // Chat warning "This AI learned from text across the internet, which includes both facts and biases. Because of this, it may repeat stereotypes or misinformation. Remember, AI isn’t always neutral or correct"
  Informative
  // If Model Bias Variable is “Republican”: This model has been trained on more right-leaning data. Therefore, its responses may reflect conservative viewpoints more than conservative ones.
  // If Model Bias Variable is “Democrat”: This model has been trained on more left-leaning data. Therefore, its responses may reflect liberal viewpoints more than conservative ones.
  // If Model Bias Variable is “Control”: randomize to be one of the above equally. Make sure to record which is chosen.
  Directed
  // extra page with video
  // https://drive.google.com/file/d/1zaETRHQeTTS7MumyxkqFnCxTQPSkfHXq/view
  Video
}

enum ControlSubtype {
  None
  Republican
  Democrat
}

model user_page_tracking {
  user_id                   String
  current_page              String
  randomized_user_questions randomized_user_questions[]
  selected_ai               AiModelType                 @default(Republican)
  extra_info_type           ExtraInfoType               @default(Control)
  control_subtype           ControlSubtype              @default(None)
  user_their_data           Boolean                     @default(true)
  user_page_order           String[]
  user_page_index           Int
  created_at                DateTime?                    @default(now())

  @@unique([user_id])
}

model randomized_user_questions {
  user_id            String
  // I named these badly :/
  // relates to which order the questions should be asked in (which page)
  question_index     Int
  // relates to which question to ask
  question           Int
  user_page_tracking user_page_tracking @relation(fields: [user_id], references: [user_id])

  @@unique([user_id, question_index])
}

model form_response {
  user_id     String
  question_id String
  response    String
  created_at  DateTime @default(now())

  @@unique([user_id, question_id])
}

model conversation {
  user_id         String
  conversation_id String
  conversation    Json

  @@unique([user_id, conversation_id])
}
